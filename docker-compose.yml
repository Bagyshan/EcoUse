version: '3.10'

services:
  web:
    build: .
    command: >
      sh -c "gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app/
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - logs_volume:/usr/src/app/logs

    ports:
      - "8000:8000"
    depends_on:
      - db
      - migration

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: eco_use
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 1
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  migration:
    build: .
    restart: on-failure
    command: >
      sh -c "python manage.py makemigrations && python manage.py makemigrations account && python manage.py makemigrations category && python manage.py makemigrations home && python manage.py makemigrations product && python manage.py makemigrations recommendation && 
             python manage.py migrate && python manage.py migrate account && python manage.py migrate category && python manage.py migrate home && python manage.py migrate product && python manage.py migrate recommendation"
    volumes:
      - .:/usr/src/app/
    depends_on:
      - db

  redis:
    image: redis

  celery:
    build: .
    command: celery -A config worker -l INFO
    volumes:
      - .:/usr/src/app/
    depends_on:
      - web
      - redis


  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    depends_on:
      - web


volumes:
  postgres_data:
  static_volume:
  media_volume:
  logs_volume: